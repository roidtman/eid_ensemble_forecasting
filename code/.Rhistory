setwd('~/Desktop/NatComm_codes/')
ls
ls()
getwd()
setwd('~/Desktop/NatComm_codes/code')
load('../data/processed/processed_epi_data.RData')
load('../data/processed/processed_epi_data.RData')
#=============================================================================#
# Author: Rachel Oidtman
# Processing spatial forecast output into RData files...
# HEAVY SCRIPT. TAKES A LONG TIME TO RUN!
#=============================================================================#
#=============================================================================#
# load in processed epi data
#=============================================================================#
load('../data/processed/processed_epi_data.RData')
# assign file path
file_path = 'no_tm_ini_2'
#=============================================================================#
# processing functions
#=============================================================================#
write_CI = function(param_posterior, lwr = 0.25, upr = 0.75){
mat = matrix(0, ncol = ncol(param_posterior), nrow = 3)
for(ii in 1:ncol(param_posterior)){
mat[1, ii] = quantile(param_posterior[, ii], c(lwr, upr), na.rm = T)[1]
mat[2, ii] = quantile(param_posterior[, ii], c(lwr, upr), na.rm = T)[2]
mat[3, ii] = median(param_posterior[, ii], na.rm = T)
}
return(mat)
}
#=============================================================================#
# load in particles
#=============================================================================#
time_btwn_assim = 4
when_to_assimilate = seq(week_first_case + time_btwn_assim, max(df_dyn$week), by = time_btwn_assim)
when_to_assimilate = c(week_first_case, when_to_assimilate)
for(tt in when_to_assimilate){
if(tt == when_to_assimilate[1]){
f_first_set = paste0('../output/', file_path, '/particles/particles_current_original.csv')
particles_84 = read.csv(file = f_first_set)
}else{
f = paste0('../output/', file_path, '/particles/particles_current_', tt, '.csv')
particles = read.csv(f)
name_tmp = paste0('particles_', tt)
assign(name_tmp, particles)
rm(particles)
}
}
when_to_assimilate
lenght(when_to_assimilate)
length(when_to_assimilate)
